@page "/order"
@page "/order/{Id:int}"
@using Ex3_FourthCoffee.Data
@using Ex3_FourthCoffee.Models
@using System.Xml
@using System.ComponentModel.DataAnnotations
@inject IProductsService ProductsService
@inject NavigationManager NavigationManager
ProductService
<h3> Order</h3>
<p> Showing info about @Product.Name</p>

<ol id="orderProcess">
    <li><span class="step-number">1</span>Choose item</li>
    <li class="current"> <span class="step-number">2</span>Details &amp; Submit</li>
    <li><span class="step-number">3</span>Receipt</li>
</ol>
<hl> Place your order: @Product.Name</hl>

<EditForm Model="@shippingValidationModel" OnValidSubmit="@HandleValidSubmit" OnInvalidSubmit="@HandleInvalidSubmit">
    <div class="row">
        <div class="col-3">
            <img src="Images/Products/Thumbnails/@Product.ImageName" class="img-fluid img-thumbnail" alt="Image of @Product.Name"/>
        </div>
        <div class="col-9">
            <DataAnnotationsValidator/>
            <ValidationSummary/>
            <ul class="orderPageList" data-role="listview">
                <li>
                    <div>
                        <p class="description">@Product.Description</p>
                    </div>
                </li>
                <li>
                    <div class="form-group">
                        Email address:<br/>
                        <InputText @bind-Value="shippingValidationModel.OrderEmail"/>
                    </div>
                </li>
                <li>
                    <div class="form-group">
                        Shipping address:<br/>
                        <InputTextArea rows="4" class="form-control form-control-sm" @bind-Value="shippingValidationModel.OrderShipping"/>
                    </div>
                </li>
                <li>
                    <div class="form-group">
                        Quantity:
                        <InputNumber @bind-Value="shippingValidationModel.OrderQuantity"/>
                        x
                        <span class="order-calc" id="orderPrice">@Product.Price.ToString("f")</span>
                        =
                        <span class="order-calc" id="orderTotal">@((shippingValidationModel.OrderQuantity*Product.Price).ToString("f"))</span>
                        <span asp-validation-for="OrderQuantity"></span>
                    </div>
                </li>
                
            </ul>
            <p class="actions">
                <button class="btn btn-danger order-button" type="submit">Place order</button>
            </p>
        </div>
    </div>
</EditForm>





@code {
    [Parameter]
    public int Id { get; set; }

    public Product Product;
    private ShippingValidationModel shippingValidationModel = new ShippingValidationModel(); 
    protected override async Task OnInitializedAsync()
    {
        if (Id != 0)
        {
            Product = ProductsService.Products.First(p => p.Id == Id);
        }
    }

    private void HandleInvalidSubmit()
    {
        Console.WriteLine("Invalid");
    }
    private void HandleValidSubmit()
    {
        NavigationManager.NavigateTo("/ordersuccess");
        
    }
    private class ShippingValidationModel
    {
        [EmailAddress, Required, Display(Name = "Email Address")]
        public string OrderEmail { get; set; }
        [Required(ErrorMessage = "Please supply a shipping address"),Display(Name = "Shipping Address")]
        public string OrderShipping { get; set;}

        [Display(Name = "Quantity")]
        [Range(1, 10)]
        public int OrderQuantity { get; set; } = 1;
    }
}